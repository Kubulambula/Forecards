[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/map/menu_button.png" type="Texture" id=1]

[sub_resource type="GDScript" id=3]
script/source = "extends Sprite

signal pressed
signal released
signal hover(value)


export(String) var text = \"Sample Text\"
export(Vector2) var hover_scale = Vector2(1.1, 1.1)

var _scale = Vector2(1,1)

func _ready():
	$MarginContainer/Label.text = text
	_scale = scale
	hover_scale = scale * hover_scale


func _on_MarginContainer_mouse_entered():
	scale = hover_scale
	emit_signal(\"hover\", true)


func _on_MarginContainer_mouse_exited():
	scale = _scale
	emit_signal(\"hover\", false)


func _on_MarginContainer_gui_input(event):
	if event is InputEventMouseButton and event.button_index == 1 and event.pressed and not event.is_echo():
		scale = _scale
		print(\"pressed\")
		emit_signal(\"pressed\")
		
	elif event is InputEventMouseButton and event.button_index == 1 and not event.pressed and not event.is_echo():
		scale = hover_scale
		emit_signal(\"released\")
		print(\"released\")
"

[sub_resource type="DynamicFontData" id=1]
font_path = "res://fonts/brokenscript-bold.ttf"

[sub_resource type="DynamicFont" id=2]
size = 50
use_mipmaps = true
use_filter = true
font_data = SubResource( 1 )

[node name="Sprite" type="Sprite"]
show_behind_parent = true
texture = ExtResource( 1 )
script = SubResource( 3 )

[node name="MarginContainer" type="MarginContainer" parent="."]
margin_left = -250.0
margin_top = -100.0
margin_right = 250.0
margin_bottom = 100.0
rect_min_size = Vector2( 500, 200 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="MarginContainer"]
margin_right = 500.0
margin_bottom = 200.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = SubResource( 2 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "I'm a button
LOL"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="gui_input" from="MarginContainer" to="." method="_on_MarginContainer_gui_input"]
[connection signal="mouse_entered" from="MarginContainer" to="." method="_on_MarginContainer_mouse_entered"]
[connection signal="mouse_exited" from="MarginContainer" to="." method="_on_MarginContainer_mouse_exited"]
